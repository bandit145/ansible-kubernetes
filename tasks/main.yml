---

- name: main | disable swap if on
  command: swapoff -a
  when: ansible_swaptotal_mb != 0

- name: main | remove swap from fstab
  lineinfile:
    path: /etc/fstab
    regexp: swap
    state: absent

- name: main | modprobe load network modules
  modprobe:
    name: "{{ item }}"
  loop:
    - overlay
    - br_netfilter

# tasks file for ansible-kubernetes
- name: main | prep sysctl for container runtime
  sysctl:
    name: "{{ item }}"
    sysctl_set: true
    value: "1"
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.ipv4.ip_forward
    - net.bridge.bridge-nf-call-ip6tables

- name: main | copy k8s/docker repos
  copy:
    src: "{{ item }}"
    dest: /etc/yum.repos.d/
  loop:
    - kubernetes.repo
    - devel:kubic:libcontainers:stable.repo

- name: main | copy crio repo
  template:
    src: devel:kubic:libcontainers:stable:cri-o.repo
    dest: /etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o.repo

- name: main | install base requirements
  yum:
    name:
      - kubelet-{{ k8s_version }}
      - kubeadm-{{ k8s_version }}
      - kubectl-{{ k8s_version }}
      - podman
      - cri-o
      - kmod-wireguard
      - wireguard-tools
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
    enablerepo: kubernetes,devel_kubic_libcontainers_stable_cri-o
  register: installed_packages

- name: main | copy crio config
  copy:
    src: crio.conf
    dest: /etc/modules-load.d/crio.conf

- name: main | reboot for wireguard kernel modules
  reboot:
  when: installed_packages.changed

- name: main | start and enable crio
  service:
    name: crio
    state: started
    enabled: true

- name: main | run master configuration
  include_tasks: master.yml
  when: hostvars[inventory_hostname].k8s_master is defined

- name: main | run worker configuration
  include_tasks: worker.yml
  when: hostvars[inventory_hostname].k8s_master is not defined

- name: main | create json query fact
  set_fact:
    jq: "[*].metadata | [?contains(name,'calico-node')]"
  delegate_to: localhost
  delegate_facts: true
  when: inventory_hostname == operation_master

- name: main | check if worker is online
  k8s_info:
    host: "https://{{ k8s_api_endpoint }}:6443"
    kubeconfig: "{{ k8s_admin_config_location }}"
    kind: Pod
    namespace: kube-system
    field_selectors:
      - status.phase=Running
  register: nodes
  until: nodes.resources | to_json | from_json | json_query(hostvars.localhost.jq) | length == ansible_play_hosts_all | length
  retries: 10
  delay: 10
  delegate_to: localhost
  become: false
  when: inventory_hostname == operation_master

- name: main | deploy cluster networking configurations
  k8s:
    host: "https://{{ k8s_api_endpoint }}:6443"
    definition: "{{ wireguard_config }}"
    kubeconfig: "{{ k8s_admin_config_location }}"
  when: inventory_hostname == operation_master
  delegate_to: localhost
  become: false
  any_errors_fatal: true

- name: main | run traefik install
  include_tasks: ingress.yml
  when:
    - hostvars[inventory_hostname].k8s_master is defined
    - inventory_hostname == operation_master

- name: main | install argocd
  include_tasks: argocd.yml
  when:
    - hostvars[inventory_hostname].k8s_master is defined
    - inventory_hostname == operation_master

- name: main | enable kubelet
  service:
    name: kubelet
    state: started
    enabled: true
